class RpgController < ApplicationController
  # IN SCAFFOLDING before_action is autogenerated in controller:
  #   before_action :set_user, only: [:show, :edit, :update, :destroy]
  # 
  # private
  #   def set_user
  #       @user = User.find(params[:id])
  #   end
#####################################################################
  @@logs||=''

  def farm
    r = rand(10..20)
    session[:gold]+=r
    @@logs+="\nEarned #{r} golds from the farm!"
  # session[:activity]= "Earned #{r} golds from the farm!" # => insert date later
    redirect_to action: "index"
  end

  def cave
    r = rand(10..15)
    session[:gold]+=r
    @@logs+="\nEarned #{r} golds from the cave!"
 #  session[:activity]= "Earned #{r} golds from the cave!" # => insert date later    
    redirect_to action: "index"
  end

  def house
    r = rand (2..5)
    session[:gold]+=r
    @@logs+="\nEarned #{r} golds from the house!"
#   session[:activity]= "Earned #{r} golds from the house!" # => insert date later   
    redirect_to action: "index"
  end

  def casino
    r = rand (-50..50)
    session[:gold]+=r
    if r<0
      @@logs+="\nEntered a casino and lost #{r} golds...Ouch.."
#     session[:activity]= "Entered a casino and lost #{r} golds...Ouch.." # => insert date later
    else
      @@logs+="\nEntered a casino and won #{r} golds! Hooray!"
#     session[:activity]= "Entered a casino and won #{r} golds! Hooray!" # => insert date later
    end
    redirect_to action: "index"
  end

  def reset
    session.clear
    redirect_to :index
  end

  def index
    #=> if session[:gold] is not defined, then assign it a value of 0
    #=> else, it is already defined, so continue additions/subtractions via else
    session[:gold]||=0
    session[:activities]=@@logs

    # Can dump what's stored in session:
    # logger.info
    p 'Printing logger.info for session: ', session[:gold].inspect,session[:activities].inspect
  end
end
